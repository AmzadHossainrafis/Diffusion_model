Metadata-Version: 2.1
Name: Diffsion_model
Version: 0.0.0
Summary: A small python package for image deblurring using DnCNN
Home-page: https://github.com/Amzad hossain/Diffsion_model
Author: Amzad hossain
Author-email: amzad.rafi@northsouth.edu
Project-URL: Bug Tracker, https://github.com/Amzad hossain/Diffsion_model/issues
License-File: LICENSE

# Diffusion model implimentation 
paper link : [Denoising Diffusion Probabilistic Models](https://arxiv.org/abs/2006.11239)

## Description

Diffusion models are a class of generative models that excel in image generation by transforming random noise into detailed images through a process inspired by physical diffusion. This involves a forward process where images are gradually noised, and a reverse process where a neural network learns to denoise, effectively generating images from noise.

Key points about diffusion models include:

- **High-Quality Images:** They produce high-resolution, realistic images.
- **Versatile Applications:** Useful for tasks like image synthesis, super-resolution, inpainting, and conditional generation.
- **Stable Training:** More stable and less prone to issues like mode collapse compared to other generative models, such as GANs.
- **Computational Intensity:** The iterative denoising process requires significant computational resources.

Despite their computational demands, diffusion models' ability to generate diverse and high-quality images makes them a powerful tool in the field of image generation.

## Table of Contents

- [Installation](#installation)
- [Usage](#usage)
- [Contributing](#contributing)
- [License](#license)

## Installation

1. create conda enviroment
 
```bash
 $ conda create --name myenv python=3.9 -y 
```
2. clone the project 
```bash
 $ git clone [link]

```


3. install requirements 
please install pytorch from 
```bash
#activate the conda env 
$ conda activate [env_name]
# cd into root of the project 
$ cd [root of the projcet ]
#then run 
$ pip install . 
# install the requirements 
$ pip install -r requirments.txt 

```
## How to train on your own data 

just changer the dataset dir path in the config.yaml file 



## Results 
Anime face generation 

Flower data generation 

Pokemon data generation 

MNIST data generation 

## Usage

Instructions on how to use the project can be found here.

## Contributing

Guidelines on how to contribute to the project can be found here.

## License

Information about the project's license can be found here.
